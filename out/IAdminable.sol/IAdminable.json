{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdmin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "transferAdmin(address)": "75829def"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}}},\"kind\":\"dev\",\"methods\":{\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}}},\"title\":\"IAdminable\",\"version\":1},\"userdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"}},\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"}},\"notice\":\"Contract module that provides a basic access control mechanism, with an admin that can be granted exclusive access to specific functions. The inheriting contract must set the initial admin in the constructor.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol\":\"IAdminable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@sablier/=node_modules/@sablier/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885\",\"dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": {
              "newAdmin": "The address of the new admin."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "admin()": {
            "notice": "The address of the admin account or contract."
          },
          "transferAdmin(address)": {
            "notice": "Transfers the contract admin to a new address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/=node_modules/@prb/",
        "@sablier/=node_modules/@sablier/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol": "IAdminable"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol": {
        "keccak256": "0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e",
        "urls": [
          "bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885",
          "dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol",
    "id": 58826,
    "exportedSymbols": {
      "IAdminable": [
        58825
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1800:85",
    "nodes": [
      {
        "id": 58804,
        "nodeType": "PragmaDirective",
        "src": "45:25:85",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 58825,
        "nodeType": "ContractDefinition",
        "src": "323:1521:85",
        "nodes": [
          {
            "id": 58812,
            "nodeType": "EventDefinition",
            "src": "722:72:85",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 58806,
              "nodeType": "StructuredDocumentation",
              "src": "559:158:85",
              "text": "@notice Emitted when the admin is transferred.\n @param oldAdmin The address of the old admin.\n @param newAdmin The address of the new admin."
            },
            "eventSelector": "bdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80",
            "name": "TransferAdmin",
            "nameLocation": "728:13:85",
            "parameters": {
              "id": 58811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58808,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldAdmin",
                  "nameLocation": "758:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58812,
                  "src": "742:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58810,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "784:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58812,
                  "src": "768:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:52:85"
            }
          },
          {
            "id": 58818,
            "nodeType": "FunctionDefinition",
            "src": "1077:49:85",
            "nodes": [],
            "documentation": {
              "id": 58813,
              "nodeType": "StructuredDocumentation",
              "src": "1015:57:85",
              "text": "@notice The address of the admin account or contract."
            },
            "functionSelector": "f851a440",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "admin",
            "nameLocation": "1086:5:85",
            "parameters": {
              "id": 58814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:2:85"
            },
            "returnParameters": {
              "id": 58817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58818,
                  "src": "1117:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1116:9:85"
            },
            "scope": 58825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58824,
            "nodeType": "FunctionDefinition",
            "src": "1792:50:85",
            "nodes": [],
            "documentation": {
              "id": 58819,
              "nodeType": "StructuredDocumentation",
              "src": "1349:438:85",
              "text": "@notice Transfers the contract admin to a new address.\n @dev Notes:\n - Does not revert if the admin is the same.\n - This function can potentially leave the contract without an admin, thereby removing any\n functionality that is only available to the admin.\n Requirements:\n - `msg.sender` must be the contract admin.\n @param newAdmin The address of the new admin."
            },
            "functionSelector": "75829def",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAdmin",
            "nameLocation": "1801:13:85",
            "parameters": {
              "id": 58822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58821,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1823:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58824,
                  "src": "1815:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1814:18:85"
            },
            "returnParameters": {
              "id": 58823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:0:85"
            },
            "scope": 58825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAdminable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 58805,
          "nodeType": "StructuredDocumentation",
          "src": "72:251:85",
          "text": "@title IAdminable\n @notice Contract module that provides a basic access control mechanism, with an admin that can be\n granted exclusive access to specific functions. The inheriting contract must set the initial admin\n in the constructor."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          58825
        ],
        "name": "IAdminable",
        "nameLocation": "333:10:85",
        "scope": 58826,
        "usedErrors": [],
        "usedEvents": [
          58812
        ]
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 85
}